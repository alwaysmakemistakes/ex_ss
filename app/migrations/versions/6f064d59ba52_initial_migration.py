"""Initial migration

Revision ID: 6f064d59ba52
Revises: 
Create Date: 2023-06-25 15:11:16.825005

"""

from alembic import op
import sqlalchemy as sa
from werkzeug.security import check_password_hash, generate_password_hash


# revision identifiers, used by Alembic.
revision = '6f064d59ba52'
down_revision = None
branch_labels = None
depends_on = None

def cata_upg():
    """Add any optional data upgrade migrations here!"""

    table = sa.sql.table('categories', sa.sql.column('name', sa.String))

    op.bulk_insert(table,
        [
            {'name': 'Роман-эпопея'},
            {'name': 'Роман'},
            {'name': 'Повесть'},
            {'name': 'Новелла'},
            {'name': 'Притча'},
            {'name': 'Сказка'},
            {'name': 'Послание'},
            {'name': 'Драма'},
            {'name': 'Комедия'},
            {'name': 'Трагедия'},
            {'name': 'Баллада'},
            {'name': 'Поэма'},
        ]
    )


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('categories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['categories.id'], name=op.f('fk_categories_parent_id_categories')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_categories'))
    )
    op.create_table('images',
    sa.Column('id', sa.String(length=100), nullable=False),
    sa.Column('file_name', sa.String(length=100), nullable=False),
    sa.Column('mime_type', sa.String(length=100), nullable=False),
    sa.Column('md5_hash', sa.String(length=100), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('object_id', sa.Integer(), nullable=True),
    sa.Column('object_type', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_images')),
    sa.UniqueConstraint('md5_hash', name=op.f('uq_images_md5_hash'))
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('last_name', sa.String(length=100), nullable=False),
    sa.Column('first_name', sa.String(length=100), nullable=False),
    sa.Column('middle_name', sa.String(length=100), nullable=True),
    sa.Column('login', sa.String(length=100), nullable=False),
    sa.Column('password_hash', sa.String(length=200), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users')),
    sa.UniqueConstraint('login', name=op.f('uq_users_login'))
    )
    op.create_table('books',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('short_desc', sa.Text(), nullable=False),
    sa.Column('full_desc', sa.Text(), nullable=False),
    sa.Column('rating_sum', sa.Integer(), nullable=False),
    sa.Column('rating_num', sa.Integer(), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.Column('author_id', sa.Integer(), nullable=True),
    sa.Column('background_image_id', sa.String(length=100), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['author_id'], ['users.id'], name=op.f('fk_books_author_id_users')),
    sa.ForeignKeyConstraint(['background_image_id'], ['images.id'], name=op.f('fk_books_background_image_id_images')),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], name=op.f('fk_books_category_id_categories')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_books'))
    )
    op.create_table('reviews',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('rating', sa.Integer(), nullable=False),
    sa.Column('text', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('book_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['book_id'], ['books.id'], name=op.f('fk_reviews_book_id_books')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_reviews_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_reviews'))
    )
    us_up()
    cata_upg()
    # role_up()
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('reviews')
    op.drop_table('books')
    op.drop_table('users')
    op.drop_table('images')
    op.drop_table('categories')
    # op.drop_table('roles')
    # ### end Alembic commands ###


# def role_up():
#      """Add any optional data upgrade migrations here!"""
#      table = sa.sql.table('roles', sa.sql.column('role_name', sa.String), sa.sql.column('role_description', sa.String))
#      op.bulk_insert(table,
#         [
#              {'role_name': 'Администратор', 'role_description': 'root'},
#              {'role_name': 'Модератор', 'role_description': 'admin'},
#              {'role_name': 'Пользователь', 'role_description': 'regular user'},
#         ]
#     )


from werkzeug.security import generate_password_hash
def us_up():

    table = sa.sql.table('users', sa.sql.column('login', sa.String), sa.sql.column('password_hash', sa.String),sa.sql.column('last_name', sa.String),
        sa.sql.column('first_name', sa.String), sa.sql.column('middle_name', sa.String))
    op.bulk_insert(table,
        [
            {'login': 'vital1', 'password_hash': generate_password_hash('qwerty'), 'last_name': 'Виталио1', 'first_name': 'Витал', 'middle_name': 'Виталыч1'},
            {'login': 'vital2', 'password_hash': generate_password_hash('qwerty'), 'last_name': 'Виталио2', 'first_name': 'Витал', 'middle_name': 'Виталыч2'},
            {'login': 'vital3', 'password_hash': generate_password_hash('qwerty'), 'last_name': 'Виталио3', 'first_name': 'Витал', 'middle_name': 'Виталыч3'},
        ]
    )